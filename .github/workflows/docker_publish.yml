name: Publish Docker images
on:
  push:
    branches:
      - master
    paths-ignore:
      - README.md

jobs:
  push_to_registry:
    name: Push Mainnet Docker image to Zondax Harbor
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=harbor.zondax.net/zondax/filecoin-node
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Zondax Harbor Registry
        uses: docker/login-action@v1
        with:
          registry: harbor.zondax.net
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: tools/main/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

  # push_nosync_to_registry:
  #   name: Push NoSync Mainnet Docker image to Zondax Harbor
  #   runs-on: ubuntu-latest
  #   steps:
  #     -
  #       name: Checkout
  #       uses: actions/checkout@v2
  #     -
  #       name: Prepare
  #       id: prep
  #       run: |
  #         DOCKER_IMAGE=harbor.zondax.net/zondax/filecoin-node-nosync
  #         VERSION=edge
  #         if [[ $GITHUB_REF == refs/tags/* ]]; then
  #           VERSION=${GITHUB_REF#refs/tags/}
  #         elif [[ $GITHUB_REF == refs/heads/* ]]; then
  #           VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
  #         elif [[ $GITHUB_REF == refs/pull/* ]]; then
  #           VERSION=pr-${{ github.event.number }}
  #         fi
  #         TAGS="${DOCKER_IMAGE}:${VERSION}"
  #         if [ "${{ github.event_name }}" = "push" ]; then
  #           TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
  #         fi
  #         TAGS="$TAGS,${DOCKER_IMAGE}:latest"
  #         echo ::set-output name=version::${VERSION}
  #         echo ::set-output name=tags::${TAGS}
  #         echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     -
  #       name: Login to Zondax Harbor Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: harbor.zondax.net
  #         username: ${{ secrets.HARBOR_USER }}
  #         password: ${{ secrets.HARBOR_PASSWORD }}
  #     -
  #       name: Build and push
  #       uses: docker/build-push-action@v2
  #       with:
  #         build-args: |
  #           DISABLE_SYNC=1
  #         context: .
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: ${{ steps.prep.outputs.tags }}
  #         labels: |
  #           org.opencontainers.image.source=${{ github.event.repository.html_url }}
  #           org.opencontainers.image.created=${{ steps.prep.outputs.created }}
  #           org.opencontainers.image.revision=${{ github.sha }}

  push_devnet_to_registry:
    name: Push Devnet Docker image to Zondax Harbor
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=harbor.zondax.net/zondax/filecoin-node-devnet
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Zondax Harbor Registry
        uses: docker/login-action@v1
        with:
          registry: harbor.zondax.net
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: tools/dev/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

  push_butterfly_to_registry:
    name: Push Butterfly Docker image to Zondax Harbor
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=harbor.zondax.net/zondax/filecoin-node-butterfly
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Zondax Harbor Registry
        uses: docker/login-action@v1
        with:
          registry: harbor.zondax.net
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: tools/butterfly/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
  

  push_calibration_to_registry:
    name: Push Calibration Docker image to Zondax Harbor
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=harbor.zondax.net/zondax/filecoin-node-calibration
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Zondax Harbor Registry
        uses: docker/login-action@v1
        with:
          registry: harbor.zondax.net
          username: ${{ secrets.HARBOR_USER }}
          password: ${{ secrets.HARBOR_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: tools/calibration/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
